<!--
    Written by: Haakon N. Unelsrød
    Main website page. Displays latest temperature logged in the database, dynamically updated every minute.
    Program settings such as alarm and furnace limits may also be changed here.
    Database path may be set in the Home Controller class.
-->

@using WebApplication6.Models;
@model HomeViewModel
<head>
     <Title></Title>

    <script type="text/javascript">
        //Sets the temperature element to the lastest temperature reading from the database
        function updateTemp() {
            $.ajax({
                type: 'POST',
                url: "/Home/GetTemp",
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    document.getElementById("temp").innerHTML = "<strong>" + data.result + "°C</strong>";
                },
                error: function (data, sucess, error) {
                    document.getElementById("temp").innerHTML = error;
                }
            });
            return false;
        }

        function validate() {
            return false;
        }

        setInterval(updateTemp, 60000); //recheck temp every minute
        updateTemp();
    </script>

    <style type="text/css">
        .container form {
            display: table;
            text-align: center;
        }

        .container control-label {
            display: table-row;
            text-align: center;
        }
    </style>
</head>


<div class="container">
    <center>
        Temperaturen er nå <p id="temp"><strong>@(Model.temperature + "°C")</strong></p>
        @using (Html.BeginForm("SignAlarm", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" })) {
            <b> <font color="red">@Model.alarmMessage </font> </b><br @Model.alarmHide />
            @Html.HiddenFor(m => m.AlarmId, new { @id="AlarmId" })
            <input type='submit' value='Kvitèr alarm' @Model.alarmHide />
        }
        @using (Html.BeginForm("UpdateSettings","Home",new {},FormMethod.Post, new { @class = "form-horizontal", role = "form" })) {
            <h3>Varslingsgrenser</h3>
            @Html.LabelFor(m => m.AlarmUpperLimit, new { @class = "control-label" })
            <br />
            @Html.TextBoxFor(m => m.AlarmUpperLimit, new { @class = "control", @type="number", @step="0.1" });
            <br />
            @Html.LabelFor(m => m.AlarmLowerLimit, new { @class = "control-label" })
            <br />
            @Html.TextBoxFor(m => m.AlarmLowerLimit, new { @class = "control", @type="number", @step = "0.1" });
            <br />
            @Html.LabelFor(m => m.LogInterval, new { @class = "control-label" })
            <br />
            <label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>@Html.TextBoxFor(m => m.LogInterval, new { @class = "control", @type = "number", @step = "1", @min="1" }); <label>min.</label>
            <br /> <h3>Ovn styring</h3>
            @Html.LabelFor(m => m.FurnaceUpperLimit, new { @class = "control-label" })
            <br />
            @Html.TextBoxFor(m => m.FurnaceUpperLimit, new { @class = "control", @type="number", @step = "0.1" });
            <br />
            @Html.LabelFor(m => m.FurnaceLowerLimit, new { @class = "control-label" })
            <br />
            @Html.TextBoxFor(m => m.FurnaceLowerLimit, new { @class = "control", @type="number", @step = "0.1" });
            <br />
            <br /> <input type="submit" value="Oppdater grenser"/>
        }
    </center>
</div>